{"version":3,"sources":["component/filter.table.js","App.js","index.js"],"names":["IndeterminateCheckbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","useState","value","setValue","onChange","useAsyncDebounce","undefined","className","e","target","placeholder","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","Table","columns","data","defaultColumn","useMemo","Filter","useTable","initialState","pageIndex","pageSize","useFilters","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","table","filename","sheet","buttonText","style","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","PaginationTableComponent","names","rp","then","html","companiesList","$","cheerio","load","each","index","element","a","header","find","text","image","attr","console","log","jsonObject","JSON","stringify","catch","err","accessor","maxWidth","minWidth","src","width","alt","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f49d5e20.chunk.js","sourcesContent":["// src/components/pagination.table.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useRowSelect,\r\n} from \"react-table\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport rp from \"request-promise\";\r\n// import cheerio, { contains } from \"cheerio\";\r\nimport cheerio from \"cheerio\";\r\n\r\n//  select and deselect\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n//end of select and deselect\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        className=\"form-control\"\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n      />\r\n    </span>\r\n  );\r\n}\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      className=\"form-control\"\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Table({ columns, data }) {\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      initialState: { pageIndex: 1, pageSize: 5 },\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => [\r\n        // Let's make a column for selection\r\n        {\r\n          id: \"selection\",\r\n          // The header can use the table's getToggleAllRowsSelectedProps method\r\n          // to render a checkbox\r\n          Header: ({ getToggleAllRowsSelectedProps }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n            </div>\r\n          ),\r\n          // The cell can use the individual row's getToggleRowSelectedProps method\r\n          // to the render a checkbox\r\n          Cell: ({ row }) => (\r\n            <div>\r\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n            </div>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ]);\r\n    }\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <ReactHTMLTableToExcel\r\n        id=\"test-table-xls-button\"\r\n        className=\"btn btn-info\"\r\n        table=\"emp\"\r\n        filename=\"tablexls\"\r\n        sheet=\"Sheet\"\r\n        buttonText=\"Export excel\"\r\n        style={[\"margin-right:0\"]}\r\n      />\r\n      <table id=\"emp\" className=\"table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                // Add the sorting props to control sorting. For this example\r\n                // we can add them into the header props\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  {/* Add a sort direction indicator */}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ðŸ”½\"\r\n                        : \" ðŸ”¼\"\r\n                      : \"\"}\r\n                  </span>\r\n                  \r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginationTableComponent() {\r\n  const [names, setValue] = useState([]);\r\n  useEffect(() => {\r\n    rp(\r\n      \"https://cors-anywhere.herokuapp.com/https://scrapethissite.com/pages/frames/?frame=i\"\r\n    )\r\n      .then((html) => {\r\n        var companiesList = [];\r\n        let $ = cheerio.load(html);\r\n        $(\".row .col-md-4.turtle-family-card\").each(async function (\r\n          index,\r\n          element\r\n        ) {\r\n          companiesList[index] = {};\r\n          var header = $(element).find(\".family-name\").text();\r\n          companiesList[index][\"familyName\"] = header;\r\n          var image = $(element).find(\".turtle-image\").attr(\"src\");\r\n          companiesList[index][\"turtleImage\"] = image;\r\n        });\r\n\r\n        console.log(companiesList.length);\r\n        setValue(companiesList);\r\n        const jsonObject = JSON.stringify(companiesList);\r\n        console.log(jsonObject);\r\n      })\r\n      .catch(function (err) {\r\n        console.log(\"crawl failed\");\r\n      });\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Turtle Family\",\r\n        columns: [\r\n          {\r\n            Header: \"FamilyName\",\r\n            accessor: \"familyName\",\r\n          },\r\n          {\r\n            Header: \"Pic\",\r\n            accessor: \"turtleImage\",\r\n            maxWidth: 90,\r\n            minWidth: 90,\r\n            Cell: ({ cell: { value } }) => (\r\n              <img src={value} width={80} alt=\"myimg\" />\r\n            ),\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Table columns={columns} data={names} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginationTableComponent;\r\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport PaginationTableComponent from \"./component/filter.table\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <PaginationTableComponent />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}